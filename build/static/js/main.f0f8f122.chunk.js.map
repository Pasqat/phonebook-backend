{"version":3,"sources":["services/api.js","components/Filter.js","components/AddNewPerson.js","components/PersonsList.js","App.js","index.js"],"names":["baseURL","Filter","filterPhoneBook","text","value","onChange","AddNewPerson","newName","newNumber","handleChangeName","handleChangeNumber","handleSubmit","onSubmit","type","PersonsList","persons","filter","removeButton","map","person","name","toLowerCase","includes","key","number","onClick","id","App","useState","setPersons","setNewName","setNewNumber","setFilter","notification","setNotification","useEffect","axios","get","then","response","data","initialPersons","Notification","message","className","error","e","target","preventDefault","newObject","personExist","find","personObject","window","confirm","put","returnedPerson","setTimeout","catch","err","post","create","concat","delete","remove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0f8f122.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = \"/api/persons\"\n\n\nconst getAll = () => {\n  const request = axios.get(baseURL)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseURL, newObject);\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nconst remove = id => {\n  return axios.delete(`${baseURL}/${id}`)\n}\n\nexport { getAll, create, update, remove };\n\n","import React from \"react\";\n\nconst Filter = ({filterPhoneBook, text}) => {\n  return (\n    <div>\n      filter show with: <input value={text} onChange={filterPhoneBook} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst AddNewPerson = ({\n  newName,\n  newNumber,\n  handleChangeName,\n  handleChangeNumber,\n  handleSubmit,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleChangeName} />\n        <br />\n        number: <input value={newNumber} onChange={handleChangeNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddNewPerson;\n","import React from \"react\";\n\nconst PersonsList = ({ persons, filter, removeButton }) => {\n  return (\n    <div>\n      {persons.map((person) => {\n        if (person.name.toLowerCase().includes(filter.toLowerCase())) {\n          return (\n            <p key={person.name}>\n              {person.name} {person.number}\n              <button onClick={() => removeButton(person.id)}>‚ùå</button>\n            </p>\n          );\n        }\n        return null;\n      })}\n    </div>\n  );\n};\n\nexport default PersonsList;\n","import React, { useState, useEffect } from \"react\";\nimport { getAll, create, update, remove } from \"./services/api\";\nimport \"./App.css\";\n\nimport Filter from \"./components/Filter\";\nimport AddNewPerson from \"./components/AddNewPerson\";\nimport PersonsList from \"./components/PersonsList\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const personExist = persons.find(\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\n    );\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    if (personExist) {\n      if (\n        window.confirm(\n          `${personExist.name} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        update(personExist.id, personObject)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.name !== personExist.name ? person : returnedPerson\n              )\n            );\n            setNotification({\n              error: false,\n              message: `The old number of ${returnedPerson.name} successfully update`,\n            });\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n          })\n          .catch((err) => {\n            setNotification({\n              error: true,\n              message: `${personExist.name} was already deleted from server`,\n            });\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n            setPersons(\n              persons.filter((person) => person.id !== personExist.id)\n            );\n          });\n      }\n\n      setNewName(\"\");\n      setNewNumber(\"\");\n      return;\n    }\n\n    create(personObject)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotification({\n            error: false,\n            message: `${returnedPerson.name} successfully added to phonebook`,\n          });\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n    });\n  };\n\n  const removeButton = (id) => {\n    remove(id);\n    setPersons(persons.filter((person) => person.id !== id));\n  };\n\n  const handleChangeName = (e) => {\n    const name = e.target.value;\n    setNewName(name);\n  };\n\n  const handleChangeNumber = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const filterPhoneBook = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return (\n      <div className={message.error ? \"error\" : \"success\"}>\n        {message.message}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notification} />\n\n      <Filter text={filter} filterPhoneBook={filterPhoneBook} />\n\n      <h2>Add new</h2>\n\n      <AddNewPerson\n        handleSubmit={handleSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        handleChangeName={handleChangeName}\n        handleChangeNumber={handleChangeNumber}\n      />\n\n      <h2>Numbers</h2>\n\n      <PersonsList\n        persons={persons}\n        filter={filter}\n        removeButton={removeButton}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}